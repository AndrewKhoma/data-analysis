data = norm.data,
mapping = aes(
x = x.ecdf(x.sorted),
y = pnorm(
q = sort(x),
mean = mean,
sd = sd
)
)
)
+
geom_point()
+
geom_abline(
intercept = 0,
slope = 1,
size = 1
)
mean = mean(x)
sd = sd(x)
x.ecdf = ecdf(x.sorted)
x.sorted = sort(x)
ggplot(
data = norm.data,
mapping = aes(
x = x.ecdf(x.sorted),
y = pnorm(
q = sort(x),
mean = mean,
sd = sd
)
)
) + geom_point() + geom_abline(
intercept = 0,
slope = 1,
size = 1
)
mean = mean(x)
sd = sd(x)
x.ecdf = ecdf(x.sorted)
x.sorted = sort(x)
ggplot(
data = norm.data,
mapping = aes(
x = x.ecdf(x.sorted),
y = pnorm(
q = sort(x),
mean = mean,
sd = sd
)
)
) + geom_abline(
intercept = 0,
slope = 1,
size = 1
)
mean = mean(x)
sd = sd(x)
x.ecdf = ecdf(x.sorted)
x.sorted = sort(x)
ggplot(
data = norm.data,
mapping = aes(
x = x.ecdf(x.sorted),
y = pnorm(
q = sort(x),
mean = mean,
sd = sd
)
)
) + geom_point() + geom_abline(
intercept = 0,
slope = 1,
size = 1
)
sd
mean
# histogram
hist(x = x, breaks = 30)
ggplot(
data = norm.data,
mapping = aes(sample = x)
) + stat_qq() + stat_qq_line()
ggplot(
data = norm.data,
mapping = aes(sample = x)
) + stat_qq()#
ggplot(
data = norm.data,
mapping = aes(sample = x)
) + stat_qq_line()
ggplot(
data = norm.data,
mapping = aes(sample = x)
) + stat_qq() + stat_qq_line()
boxplot(
x,
horizontal = T,
col = "turquoise"
)
# range
sample_range = range(x)
cat(sprintf("mean = %f\n", mean(x)))
cat(sprintf("median = %f\n", median(x)))
cat(sprintf("variance = %f.4\n", var(x)))
cat(sprintf("coefficient of variation = %.4f\n", (sd(x = x)/mean(x = x))))
cat(sprintf("variance = %f.4\n", var(x)))
cat(sprintf("variance = %.4f\n", var(x)))
cat(sprintf("median = %f\n", median(x)))
cat(sprintf("median = %.4f\n", median(x)))
# install tidyverse:
# install.packages("tidyverse")
# import tidyverse:
library(tidyverse)
# change working directory to that of cats.csv:
# setwd("C:/Users/NikitaSkybytskyi/Desktop/data-analysis")
# read .csv with header and store in memory as norm.data
norm.data <- read.csv(
file = "cats.csv",
header = TRUE,
stringsAsFactors = FALSE
)
# norm.data
# Bwt is body weight and Hwt is heart weight:
x <- norm.data$Hwt
# x
# we will sort x to simplify further plotting:
x.sorted = sort(x)
# x.sorted
# mean
mean = mean(x)
# standard deviation
sd = sd(x)
# range
sample_range = range(x)
# histogram
hist(x = x, breaks = 30)
# p-p plot
x.ecdf = ecdf(x.sorted)
ggplot(
data = norm.data,
mapping = aes(
x = x.ecdf(x.sorted),
y = pnorm(q = sort(x), mean = mean, sd = sd)
)
) + geom_point() + geom_abline(intercept = 0, slope = 1, size = 1)
# q-q plot
ggplot(
data = norm.data,
mapping = aes(sample = x)
) + stat_qq() + stat_qq_line()
# box-plot
boxplot(x, horizontal = T, col = "turquoise")
cat(sprintf("mean = %.4f\n", mean(x)))
cat(sprintf("median = %.4f\n", median(x)))
cat(sprintf("variance = %.4f\n", var(x)))
cat(sprintf("standard deviation = %.4f\n", sd(x = x)))
cat(sprintf("coefficient of variation = %.4f\n", (sd(x = x) / mean(x = x))))
cat(sprintf("min value = %.4f\n", sample_range[1]))
cat(sprintf("max value = %.4f\n", sample_range[2]))
cat(sprintf("range of sample = %.4f\n", sample_range[2] - sample_range[1]))
cat(sprintf("kurtosis = %.4f\n", kurtosis(x = x)))
cat(sprintf("skewdness = %.4f\n", skewness(x = x)))
cat(sprintf("kurtosis = %.4f\n", kurtosis(x = x)))
# for kurtosis function
library(e1071)
# for kurtosis function
install.packages("e1071")
library(e1071)
cat(sprintf("kurtosis = %.4f\n", kurtosis(x = x)))
cat(sprintf("skewdness = %.4f\n", skewness(x = x))
cat(sprintf("skewness = %.4f\n", skewness(x = x)))
cat(sprintf("skewness = %.4f\n", skewness(x = x)))
clear
# install tidyverse:
# install.packages("tidyverse")
# import tidyverse:
library(tidyverse)
# for kurtosis function
install.packages("e1071")
library(e1071)
# change working directory to that of cats.csv:
# setwd("C:/Users/NikitaSkybytskyi/Desktop/data-analysis")
# read .csv with header and store in memory as norm.data
norm.data <- read.csv(
file = "cats.csv",
header = TRUE,
stringsAsFactors = FALSE
)
# norm.data
# Bwt is body weight and Hwt is heart weight:
x <- norm.data$Hwt
# x
# we will sort x to simplify further plotting:
x.sorted = sort(x)
# x.sorted
# mean
mean = mean(x)
# standard deviation
sd = sd(x)
# range
sample_range = range(x)
# histogram
hist(x = x, breaks = 30)
# p-p plot
x.ecdf = ecdf(x.sorted)
ggplot(
data = norm.data,
mapping = aes(
x = x.ecdf(x.sorted),
y = pnorm(q = sort(x), mean = mean, sd = sd)
)
) + geom_point() + geom_abline(intercept = 0, slope = 1, size = 1)
# q-q plot
ggplot(
data = norm.data,
mapping = aes(sample = x)
) + stat_qq() + stat_qq_line()
# box-plot
boxplot(x, horizontal = T, col = "turquoise")
cat(sprintf("mean = %.4f\n", mean(x)))
cat(sprintf("median = %.4f\n", median(x)))
cat(sprintf("variance = %.4f\n", var(x)))
cat(sprintf("standard deviation = %.4f\n", sd(x = x)))
cat(sprintf("coefficient of variation = %.4f\n", (sd(x = x) / mean(x = x))))
cat(sprintf("min value = %.4f\n", sample_range[1]))
cat(sprintf("max value = %.4f\n", sample_range[2]))
cat(sprintf("range of sample = %.4f\n", sample_range[2] - sample_range[1]))
cat(sprintf("kurtosis = %.4f\n", kurtosis(x = x)))
cat(sprintf("skewness = %.4f\n", skewness(x = x)))
# install tidyverse:
# install.packages("tidyverse")
# import tidyverse:
library(tidyverse)
# for kurtosis function:
# install.packages("e1071")
library(e1071)
# change working directory to that of cats.csv:
# setwd("C:/Users/NikitaSkybytskyi/Desktop/data-analysis")
# read .csv with header and store in memory as norm.data
norm.data <- read.csv(
file = "cats.csv",
header = TRUE,
stringsAsFactors = FALSE
)
# norm.data
# Bwt is body weight and Hwt is heart weight:
x <- norm.data$Hwt
# x
# we will sort x to simplify further plotting:
x.sorted = sort(x)
# x.sorted
# mean
mean = mean(x)
# standard deviation
sd = sd(x)
# range
sample_range = range(x)
# histogram
hist(x = x, breaks = 30)
# p-p plot
x.ecdf = ecdf(x.sorted)
ggplot(
data = norm.data,
mapping = aes(
x = x.ecdf(x.sorted),
y = pnorm(q = sort(x), mean = mean, sd = sd)
)
) + geom_point() + geom_abline(intercept = 0, slope = 1, size = 1)
# q-q plot
ggplot(
data = norm.data,
mapping = aes(sample = x)
) + stat_qq() + stat_qq_line()
# box-plot
boxplot(x, horizontal = T, col = "turquoise")
cat(sprintf("mean = %.4f\n", mean(x)))
cat(sprintf("median = %.4f\n", median(x)))
cat(sprintf("variance = %.4f\n", var(x)))
cat(sprintf("standard deviation = %.4f\n", sd(x = x)))
cat(sprintf("coefficient of variation = %.4f\n", (sd(x = x) / mean(x = x))))
cat(sprintf("min value = %.4f\n", sample_range[1]))
cat(sprintf("max value = %.4f\n", sample_range[2]))
cat(sprintf("range of sample = %.4f\n", sample_range[2] - sample_range[1]))
cat(sprintf("kurtosis = %.4f\n", kurtosis(x = x)))
cat(sprintf("skewness = %.4f\n", skewness(x = x)))
x.ecdf = ecdf(x.sorted)
ggplot(
data = norm.data,
mapping = aes(x = x.ecdf(x.sorted), y = pnorm(q = x.sorted, mean = mean, sd = sd))
) + geom_point() + geom_abline(intercept = 0, slope = 1, size = 1)
x.ecdf = ecdf(x.sorted)
ggplot(
data = norm.data,
mapping = aes(x = x.ecdf(x.sorted), y = pnorm(q = sort(x), mean = mean, sd = sd))
) + geom_point() + geom_abline(intercept = 0, slope = 1, size = 1)
x.ecdf = ecdf(x.sorted)
ggplot(
data = norm.data,
mapping = aes(x = x.ecdf(x.sorted), y = pnorm(q = x.sorted, mean = mean, sd = sd))
) + geom_point() + geom_abline(intercept = 0, slope = 1, size = 1)
x <- norm.data$Bwt
# we will sort x to simplify further plotting:
x.sorted = sort(x)
# mean
mean = mean(x)
# standard deviation
sd = sd(x)
# range
sample_range = range(x)
# histogram
hist(x = x, breaks = 30)
x.ecdf = ecdf(x.sorted)
ggplot(
data = norm.data,
mapping = aes(x = x.ecdf(x.sorted), y = pnorm(q = x.sorted, mean = mean, sd = sd))
) + geom_point() + geom_abline(intercept = 0, slope = 1, size = 1)
ggplot(data = norm.data, mapping = aes(sample = x)) + stat_qq() + stat_qq_line()
boxplot(x, horizontal = TRUE, col = "turquoise")
cat(sprintf("Mean = %.4f\n", mean(x)))
library(tidyverse)
library(e1071)
norm.data <- read.csv(file = "cats.csv", header = TRUE, stringsAsFactors = FALSE)
x <- norm.data$Hwt
x.sorted = sort(x)
mean = mean(x)
sd = sd(x)
sample_range = range(x)
hist(x = x, breaks = 30)
x.ecdf = ecdf(x.sorted)
ggplot(
data = norm.data,
mapping = aes(x = x.ecdf(x.sorted), y = pnorm(q = x.sorted, mean = mean, sd = sd))
) + geom_point() + geom_abline(intercept = 0, slope = 1, size = 1)
ggplot(data = norm.data, mapping = aes(sample = x)) + stat_qq() + stat_qq_line()
boxplot(x, horizontal = TRUE, col = "turquoise")
cat(sprintf("Mean = %.4f\n", mean(x)))
cat(sprintf("Median = %.4f\n", median(x)))
cat(sprintf("Variance = %.4f\n", var(x)))
cat(sprintf("Standard deviation = %.4f\n", sd(x = x)))
cat(sprintf("Coefficient of variation = %.4f\n", (sd(x = x) / mean(x = x))))
cat(sprintf("Min value = %.4f\n", sample_range[1]))
cat(sprintf("Max value = %.4f\n", sample_range[2]))
cat(sprintf("Range of sample = %.4f\n", sample_range[2] - sample_range[1]))
cat(sprintf("Kurtosis = %.4f\n", kurtosis(x = x)))
cat(sprintf("Skewness = %.4f\n", skewness(x = x)))
# install tidyverse:
# install.packages("tidyverse")
# import tidyverse:
library(tidyverse)
# for kurtosis function:
# install.packages("e1071")
library(e1071)
# change working directory to that of cats.csv:
# setwd("C:/Users/NikitaSkybytskyi/Desktop/data-analysis")
# read .csv with header and store in memory as norm.data
norm.data <- read.csv(file = "cats.csv", header = TRUE, stringsAsFactors = FALSE)
# norm.data
# Bwt is body weight and Hwt is heart weight:
x <- norm.data$Hwt
# x
# we will sort x to simplify further plotting:
x.sorted = sort(x)
# x.sorted
# mean, standard deviation and sample range for further usage:
stats <- data.frame(mean = mean(x), sd = sd(x), range = range(x))
# histogram
hist(x = x, breaks = 30)
# p-p plot
x.ecdf = ecdf(x.sorted)
ggplot(
data = norm.data,
mapping = aes(x = x.ecdf(x.sorted), y = pnorm(q = x.sorted, mean = stats$mean, sd = stats$sd))
) + geom_point() + geom_abline(intercept = 0, slope = 1, size = 1)
# q-q plot
ggplot(data = norm.data, mapping = aes(sample = x)) + stat_qq() + stat_qq_line()
# box plot
boxplot(x, horizontal = TRUE, col = "turquoise")
cat(sprintf("Mean = %.4f\n", stats$mean))
# Mean = 10.6306
cat(sprintf("Median = %.4f\n", median(x)))
# Median = 10.1000
cat(sprintf("Variance = %.4f\n", var(x)))
# Variance = 5.9275
cat(sprintf("Standard deviation = %.4f\n", stats$sd))
# Standard deviation = 2.4346
cat(sprintf("Coefficient of variation = %.4f\n", stats$sd / stats$mean))
# Coefficient of variation = 0.2290
cat(sprintf("Min value = %.4f\n", stats$range[1]))
# Min value = 6.3000
cat(sprintf("Max value = %.4f\n", stats$range[2]))
# Max value = 20.5000
cat(sprintf("Range of sample = %.4f\n", stats$range[2] - stats$range[1]))
# Range of sample = 14.2000
cat(sprintf("Kurtosis = %.4f\n", kurtosis(x = x)))
# Kurtosis = 1.0253
cat(sprintf("Skewness = %.4f\n", skewness(x = x)))
# Skewness = 0.8214
View(stats)
View(stats)
View(stats)
View(stats)
# install tidyverse:
# install.packages("tidyverse")
# import tidyverse:
library(tidyverse)
# for kurtosis function:
# install.packages("e1071")
library(e1071)
# change working directory to that of cats.csv:
# setwd("C:/Users/NikitaSkybytskyi/Desktop/data-analysis")
# read .csv with header and store in memory as norm.data
norm.data <- read.csv(file = "cats.csv", header = TRUE, stringsAsFactors = FALSE)
# norm.data
# Bwt is body weight and Hwt is heart weight:
x <- norm.data$Hwt
# x
# we will sort x to simplify further plotting:
x.sorted = sort(x)
# x.sorted
# mean, standard deviation and sample range for further usage:
stats <- data.frame(mean = mean(x), sd = sd(x), range = range(x))
# histogram
hist(x = x, breaks = 30)
# p-p plot
x.ecdf = ecdf(x.sorted)
ggplot(
data = norm.data,
mapping = aes(x = x.ecdf(x.sorted), y = pnorm(q = x.sorted, mean = stats$mean, sd = stats$sd))
) + geom_point() + geom_abline(intercept = 0, slope = 1, size = 1)
# q-q plot
ggplot(data = norm.data, mapping = aes(sample = x)) + stat_qq() + stat_qq_line()
# box plot
boxplot(x, horizontal = TRUE, col = "turquoise")
cat(sprintf("Mean = %.4f\n", stats$mean))
# Mean = 10.6306
cat(sprintf("Median = %.4f\n", median(x)))
# Median = 10.1000
cat(sprintf("Variance = %.4f\n", var(x)))
# Variance = 5.9275
cat(sprintf("Standard deviation = %.4f\n", stats$sd))
# Standard deviation = 2.4346
cat(sprintf("Coefficient of variation = %.4f\n", stats$sd / stats$mean))
# Coefficient of variation = 0.2290
cat(sprintf("Min value = %.4f\n", (stats$range)[1]))
# Min value = 6.3000
cat(sprintf("Max value = %.4f\n", (stats$range)[2]))
# Max value = 20.5000
cat(sprintf("Range of sample = %.4f\n", (stats$range)[2] - (stats$range)[1]))
# Range of sample = 14.2000
cat(sprintf("Kurtosis = %.4f\n", kurtosis(x = x)))
# Kurtosis = 1.0253
cat(sprintf("Skewness = %.4f\n", skewness(x = x)))
# Skewness = 0.8214
View(stats)
View(stats)
# install tidyverse:
# install.packages("tidyverse")
# import tidyverse:
library(tidyverse)
# for kurtosis function:
# install.packages("e1071")
library(e1071)
# change working directory to that of cats.csv:
# setwd("C:/Users/NikitaSkybytskyi/Desktop/data-analysis")
# read .csv with header and store in memory as norm.data
norm.data <- read.csv(file = "cats.csv", header = TRUE, stringsAsFactors = FALSE)
# norm.data
# Bwt is body weight and Hwt is heart weight:
x <- norm.data$Hwt
# x
# we will sort x to simplify further plotting:
x.sorted = sort(x)
# x.sorted
# mean
mean = mean(x)
# standard deviation
sd = sd(x)
# range
sample_range = range(x)
# histogram
hist(x = x, breaks = 30)
# p-p plot
x.ecdf = ecdf(x.sorted)
ggplot(
data = norm.data,
mapping = aes(x = x.ecdf(x.sorted), y = pnorm(q = x.sorted, mean = mean, sd = sd))
) + geom_point() + geom_abline(intercept = 0, slope = 1, size = 1)
# q-q plot
ggplot(data = norm.data, mapping = aes(sample = x)) + stat_qq() + stat_qq_line()
# box plot
boxplot(x, horizontal = TRUE, col = "turquoise")
cat(sprintf("Mean = %.4f\n", mean(x)))
# Mean = 10.6306
cat(sprintf("Median = %.4f\n", median(x)))
# Median = 10.1000
cat(sprintf("Variance = %.4f\n", var(x)))
# Variance = 5.9275
cat(sprintf("Standard deviation = %.4f\n", sd(x = x)))
# Standard deviation = 2.4346
cat(sprintf("Coefficient of variation = %.4f\n", (sd(x = x) / mean(x = x))))
# Coefficient of variation = 0.2290
cat(sprintf("Min value = %.4f\n", sample_range[1]))
# Min value = 6.3000
cat(sprintf("Max value = %.4f\n", sample_range[2]))
# Max value = 20.5000
cat(sprintf("Range of sample = %.4f\n", sample_range[2] - sample_range[1]))
# Range of sample = 14.2000
cat(sprintf("Kurtosis = %.4f\n", kurtosis(x = x)))
# Kurtosis = 1.0253
cat(sprintf("Skewness = %.4f\n", skewness(x = x)))
# Skewness = 0.8214
